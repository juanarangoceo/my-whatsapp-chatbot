require('dotenv').config();
const express = require('express');
const axios = require('axios');
const OpenAI = require('openai');
const twilio = require('twilio');

const app = express();
app.use(express.urlencoded({ extended: false }));
app.use(express.json());

// Configurar OpenAI correctamente
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

// Configurar Twilio
const { TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN } = process.env;
const client = twilio(TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN);
const { MessagingResponse } = twilio.twiml;

// Configurar Shopify
const SHOPIFY_STORE_URL = process.env.SHOPIFY_STORE_URL;
const SHOPIFY_API_VERSION = process.env.SHOPIFY_API_VERSION;
const SHOPIFY_ADMIN_TOKEN = process.env.SHOPIFY_ADMIN_TOKEN;
const PRODUCT_ID = "9535019647283"; // ID del producto Coffee Maker en Shopify

// Endpoint de WhatsApp
app.post('/whatsapp', async (req, res) => {
  try {
    const incomingMsg = req.body.Body.trim();
    console.log('Mensaje entrante:', incomingMsg);

    // Obtener detalles del producto espec√≠fico desde Shopify
    const shopifyResponse = await axios.get(
      `https://${SHOPIFY_STORE_URL}/admin/api/${SHOPIFY_API_VERSION}/products/${PRODUCT_ID}.json`,
      {
        headers: { 'X-Shopify-Access-Token': SHOPIFY_ADMIN_TOKEN },
      }
    );

    const product = shopifyResponse.data.product;
    let productText = 'No se encontr√≥ informaci√≥n del producto.';

    if (product) {
      const cleanDescription = product.body_html.replace(/<\/?[^>]+(>|$)/g, '');
      productText = `
üì¶ Producto: ${product.title}
‚úÖ Descripci√≥n: ${cleanDescription}
üí∞ Precio: ${product.variants[0].price}
üõí Link de compra: https://${SHOPIFY_STORE_URL}/products/${product.handle}
      `;
    }

    // Prompt corregido con formato adecuado
    const prompt = `
Juan es un barista profesional y asesor en caf√©, con un conocimiento profundo sobre caf√© y m√°quinas para su preparaci√≥n. 
Su misi√≥n es vender la Coffee Maker a clientes interesados en preparar caf√© de calidad en casa.

üìå **Guion de ventas estructurado en 5 interacciones:**

1Ô∏è‚É£ **Saludo e identificaci√≥n de la necesidad**:
   - Si el cliente menciona caf√©, cafetera, espresso, cappuccino o similar, Juan lo saluda cordialmente, se presenta y confirma si su ubicaci√≥n aplica para **env√≠o gratis y pago contra entrega**.
   - Luego pregunta: "¬øDeseas conocer nuestros precios?".

2Ô∏è‚É£ **Presentaci√≥n del producto y precios**:
   - Si el cliente muestra inter√©s, Juan le presenta la **Coffee Maker**, destacando sus ventajas:
     - ‚òï Preparaci√≥n de espresso y cappuccino en casa con calidad profesional.
     - üöö Env√≠o gratis con pago contra entrega.
     - üî• Alta presi√≥n de 15 bares para un caf√© intenso y arom√°tico.
     - üõ† F√°cil de usar y limpiar.
   - Estructura de precios en estilo lista:
     üì¶ Producto: Coffee Maker
     ‚úÖ Env√≠o Gratis
     üí∞ Precio: ${product.variants[0].price}
     üõí Pagas al recibir.
   - Luego pregunta: "¬øPara qu√© uso deseas la Coffee Maker?".

3Ô∏è‚É£ **Conexi√≥n con la necesidad del cliente**:
   - Basado en la respuesta del cliente, Juan explica c√≥mo la Coffee Maker le facilitar√° la vida.
   - Destaca beneficios clave dependiendo del uso mencionado.
   - Luego pregunta: "¬øDeseas que te enviemos el producto y lo pagas al recibir?".

4Ô∏è‚É£ **Captura de datos para el pedido**:
   - Si el cliente confirma la compra, Juan le solicita los siguientes datos en formato claro:
     ‚úçÔ∏è Para confirmar tu pedido, ind√≠came:
     1Ô∏è‚É£ Nombre
     2Ô∏è‚É£ Apellido
     3Ô∏è‚É£ Tel√©fono
     4Ô∏è‚É£ Departamento
     5Ô∏è‚É£ Ciudad
     6Ô∏è‚É£ Direcci√≥n
     7Ô∏è‚É£ Color deseado

5Ô∏è‚É£ **Verificaci√≥n final del pedido**:
   - Juan devuelve los datos en el mismo formato y pregunta si est√°n correctos.
   - Si el cliente confirma, finaliza con: "¬°Todo confirmado! üéâ Tu Coffee Maker llegar√° pronto.".

‚úÖ **Manejo de Objeciones**:
- üí∞ Si el cliente menciona el precio: Explica que es una inversi√≥n en caf√© de calidad, evitando gastos en cafeter√≠as.
- üè¨ Si pregunta por tienda f√≠sica: Indica que el centro de distribuci√≥n est√° en Cali y no hay mostrador, pero hay env√≠os a toda Colombia.
- üîé Si pregunta por la marca: Responde que la marca es **RAF**, con **3 meses de garant√≠a**.

üë• **Mensaje del cliente**: "${incomingMsg}"
`;

    // Llamar a OpenAI para generar respuesta
    const openaiResponse = await openai.chat.completions.create({
      model: 'gpt-4-turbo',
      messages: [{ role: "user", content: prompt }],
      max_tokens: 200,
      temperature: 0.7,
    });

    const botAnswer = openaiResponse.choices[0].message.content.trim();
    console.log('Respuesta generada:', botAnswer);

    // Enviar respuesta por Twilio
    const twiml = new MessagingResponse();
    twiml.message(botAnswer);
    res.type('text/xml');
    res.send(twiml.toString());
  } catch (error) {
    console.error('Error:', error?.response?.data || error.message);
    res.status(500).send('Error interno del servidor');
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Servidor en ejecuci√≥n en http://localhost:${PORT}`);
});
